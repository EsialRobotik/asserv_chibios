name: Build All Robots

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        robot: [Princess, PAMI, PMI, PMX, Simu_F446, Simulation]
    continue-on-error: true
    outputs:
      sha: ${{ steps.vars.outputs.sha }}
      date: ${{ steps.vars.outputs.date }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0  # ✅ nécessaire pour git rev-parse

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          openocd \
          binutils-arm-none-eabi \
          gcc-arm-none-eabi \
          libnewlib-arm-none-eabi \
          libstdc++-arm-none-eabi-newlib \
          gdb-multiarch

    - name: Build firmware for ${{ matrix.robot }}
      run: make ROBOT=${{ matrix.robot }} all

    - name: Set artifact name
      id: vars
      run: |
        echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
      
#    - name: Upload firmware artifact
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        name: ${{ matrix.robot }}-${{ steps.vars.outputs.date }}-${{ steps.vars.outputs.sha }}
#        path: |
#          src/Robots/${{ matrix.robot }}
#        if-no-files-found: warn
